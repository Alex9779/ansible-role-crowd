---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include release specific variables
  include_vars: "{{ loop_var }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths: "../vars"
      skip: "yes"
  loop_control:
    loop_var: "loop_var"
  tags: crowd

- name: include release specific tasks
  include_tasks: "{{ loop_var }}"
  with_first_found:
    - files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths: "."
      skip: "yes"
  loop_control:
    loop_var: "loop_var"
  tags: crowd

- name: prepare directories
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  with_items:
    - { dest: "/etc/init.d" }
    - { dest: "/etc/systemd/system" }
    - { dest: "/opt/atlassian/crowd", owner: "daemon", group: "daemon" }
    - { dest: "/opt/atlassian/crowd/apache-tomcat/bin", owner: "daemon", group: "daemon" }
    - { dest: "/opt/atlassian/crowd/apache-tomcat/conf", owner: "daemon", group: "daemon" }
    - { dest: "/var/atlassian/application-data/crowd", owner: "daemon", group: "daemon" }
  tags: crowd

- name: unarchive package
  shell: |
    cd /opt/atlassian/crowd
    curl -skL {{ crowd_download_url }} | tar zxf - --strip-components 1
    cd /opt/atlassian/crowd/apache-tomcat/lib
    rm -rf *mysql*.jar
    curl -skL {{ mysql_jdbc_download_url }} | tar zxf - --strip-components 1 --wildcards "mysql*/*mysql*.jar"
    cd /opt/atlassian/crowd/apache-tomcat/lib
    rm -rf *postgresql*.jar
    curl -skL {{ postgresql_jdbc_download_url }} -O
    chown -Rf daemon:daemon /opt/atlassian/crowd
  args:
    creates: "/opt/atlassian/crowd/start_crowd.sh"
  tags: crowd

- name: patch /opt/atlassian/crowd/build.properties
  lineinfile:
    path: "/opt/atlassian/crowd/build.properties"
    regexp: "^crowd.url="
    line: "crowd.url=http://localhost:8095{{ crowd_catalina_context_path or '' }}"
    state: present
  register: lineinfile_result
  tags: crowd

- name: update build with ant
  shell: |
    cd /opt/atlassian/crowd
    rm -rf apache-tomcat/webapps/ROOT
    rm -rf apache-tomcat/conf/Catalina/localhost/crowd.xml
    ./build.sh
    chown -Rf daemon:daemon /opt/atlassian/crowd
  when: lineinfile_result is changed
  register: result
  changed_when: result is not succeeded
  tags: crowd

- name: copy templates
  template:
    src: "./templates{{ item.dest }}.j2"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
  with_items:
    - { dest: "/etc/init.d/crowd", mode: "0755" }
    - { dest: "/etc/systemd/system/crowd.service" }
    - { dest: "/opt/atlassian/crowd/apache-tomcat/bin/setenv.sh", owner: "daemon", group: "daemon", mode: "0755" }
    - { dest: "/opt/atlassian/crowd/apache-tomcat/conf/server.xml", owner: "daemon", group: "daemon" }
    - { dest: "/opt/atlassian/crowd/start_crowd.sh", owner: "daemon", group: "daemon", mode: "0755" }
  register: template_result
  tags: crowd

- name: prepare files
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  with_items:
    - { dest: "/etc/init.d/crowd", mode: "0755" }
    - { dest: "/etc/systemd/system/crowd.service" }
    - { dest: "/opt/atlassian/crowd/apache-tomcat/bin/setenv.sh", owner: "daemon", group: "daemon", mode: "0755" }
    - { dest: "/opt/atlassian/crowd/apache-tomcat/conf/server.xml", owner: "daemon", group: "daemon" }
    - { dest: "/opt/atlassian/crowd/start_crowd.sh", owner: "daemon", group: "daemon", mode: "0755" }
  tags: crowd

- name: systemctl daemon-reload
  systemd:
    name: crowd
    daemon_reload: yes
  when:
    - ansible_service_mgr == 'systemd'
    - template_result is changed
  changed_when: false
  ignore_errors: yes
  tags: crowd

- name: enable service
  service:
    name: crowd
    enabled: yes
  changed_when: false
  ignore_errors: yes
  tags: crowd
